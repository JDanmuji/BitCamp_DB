package student.dao;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Scanner;

public class Student {
	Scanner scan = new Scanner(System.in);
	
	private Connection conn;
	private PreparedStatement  pstmt;
	private String driver = "oracle.jdbc.driver.OracleDriver";
	private String url = "jdbc:oracle:thin:@localhost:1521:xe";
	private String name = "C##JAVA";
	private String passwd = "1234";
	private ResultSet  rs;
	

	//Oracle Driver Loading
	public Student() {

		try {
			
			Class.forName(driver);
			
		} catch (ClassNotFoundException e) {
			
			e.printStackTrace();
		}
		
	}
	
	//Oracle Connecting
	public void getConnection()  {
	
		try {
			
			conn = DriverManager.getConnection(url, name, passwd);
			
		} catch (SQLException e) {
			
			e.printStackTrace();
			
		}
		
	}
	
	
	//menu select
	public void menu() {
		int num = 0;
		
		while(true) {
			
			System.out.println();
			System.out.println("*******************************");
			System.out.println("\t관리");
			System.out.println("*******************************");
			System.out.println("\t1. 입력");
			System.out.println("\t2. 검색");
			System.out.println("\t3. 삭제");
			System.out.println("\t4. 종료");
			System.out.println("*******************************");
			System.out.print("번호 선택 : ");
			num = scan.nextInt();
			
			
			if(num == 4) break;
			
			if (num == 1) {
				insertArticles();
			} else if (num == 2) {
				selectArticles();
			} else if (num == 3) {
				deleteArticles();
			}
			
		}
		
	}
	

	//insert
	public void insertArticles()  {
		int num = 0;
		String name = null;
		String value = null;

		while (true) {
			
			System.out.println();
			System.out.println("*******************************");
			System.out.println("\t1. 학생");
			System.out.println("\t2. 교수");
			System.out.println("\t3. 관리자");
			System.out.println("\t4. 이전 메뉴");
			System.out.println("*******************************");
			System.out.print("번호 선택 : ");
			num = scan.nextInt();
					
			if (num == 4) break;
			
			System.out.println("이름 입력 : ");
			name = scan.next();
			
			if (num == 1) {
				System.out.println("학번 입력 : ");	
			} else if (num == 2) {
				System.out.println("과목 입력 : ");
			} else if (num == 3) {
				System.out.println("부서 입력 : ");
			}
			
			value = scan.next();
			
			
			this.getConnection();
			
			
			
			String sql = "insert into student_new values(?, ?, ?)";
			
			try {
				pstmt = conn.prepareStatement(sql);
				pstmt.setString(1, name);
				pstmt.setString(2, value);
				pstmt.setInt(3, num);
						
				int su = pstmt.executeUpdate();
				
				System.out.println(su + "행 이(가) 삽입되었습니다.");
				
			} catch (SQLException e) {
				
				e.printStackTrace();
				
			} finally {
				
				try {
					
					if (pstmt != null) pstmt.close();
					if (conn != null) conn.close();
					
				} catch (SQLException e) {
					
					e.printStackTrace();
				}
			}
		}
		
	}
	
	//select
	public void selectArticles()  {
		int num = 0;
		String name = "";
		String value = "";
		String sql = "";
		int code = 0;

		while (true) {
			
			System.out.println();
			System.out.println("*******************************");
			System.out.println("\t1. 이름 검색");
			System.out.println("\t2. 전체 검색");
			System.out.println("\t3. 이전 메뉴");
			System.out.println("*******************************");

			System.out.print("번호 선택 : ");
			num = scan.nextInt();
					
			if (num == 3) break;
			
			
			if (num == 1) {
				System.out.println("검색할 이름 입력 : ");	
				name = scan.next();
			} 
			
		
			
			this.getConnection();
			
			if(name.length() > 0) {
				
				sql = "select * from student_new where name like ?";		
			} else {
				
				sql = "select * from student_new";
			}
			
			
			
			try {
				
				pstmt = conn.prepareStatement(sql);

				if (name.length() > 0) {
					pstmt.setString(1, "%" + name + "%");
				}
				
				rs = pstmt.executeQuery(); //테이블처럼 return;

				
				
				while (rs.next()) { //레코두 있으면 true, 없으면 false
				
					code = rs.getInt("code");
					
					if (code == 1) {
						value = "학번";
					} else if (code == 2) {
						value = "과목";
					} else if (code == 3) {
						value = "부서";
					}
					
					System.out.println("이름 = " + rs.getString("name") + "\t" 
									 + value +  " = "	+ rs.getString("value")
										); 
					
				
				
				}
						
				int su = pstmt.executeUpdate();
				
				System.out.println(su + "행 이(가) 조회되었습니다.");

				name = "";
				
			} catch (SQLException e) {
				
				e.printStackTrace();
				
			} finally {
				
				try {
					
					if (pstmt != null) pstmt.close();
					if (conn != null) conn.close();
					if (rs != null) rs.close();
					
				} catch (SQLException e) {
					
					e.printStackTrace();
				}
			}
			
		}
			
	}
	
	
	//delete
	public void deleteArticles()  {
		int num = 0;
		String name = "";
		String sql = "";
		
		while (true) {
			
			System.out.println();
			System.out.println("*******************************");
			System.out.println("\t1. 이름 삭제");
			System.out.println("\t2. 전체 삭제");
			System.out.println("\t3. 이전 메뉴");
			System.out.println("*******************************");

			System.out.print("번호 선택 : ");
			num = scan.nextInt();
					
			if (num == 3) break;
			
			
			if (num == 1) {
				System.out.println("삭제할 이름 입력 : ");	
				name = scan.next();
			} 
			
		
			
			this.getConnection();
			
			if (name.length() > 0) {
				sql = "delete from student_new where name = ?";		
			} else {
				sql = "delete from student_new";
			}
			
			
			
			try {
				
				pstmt = conn.prepareStatement(sql);
				
				if (name.length() > 0) {
					pstmt.setString(1, name);
				}
				rs = pstmt.executeQuery(); //테이블처럼 return;

				int su = pstmt.executeUpdate();
				
				System.out.println(su + "행 이(가) 삭제되었습니다.");
				
			} catch (SQLException e) {
				
				e.printStackTrace();
				
			} finally {
				
				try {
					
					if (pstmt != null) pstmt.close();
					if (conn != null) conn.close();
					if (rs != null) rs.close();
					
				} catch (SQLException e) {
					
					e.printStackTrace();
				}
			}
			
		}
			
	}
	
	
	public static void main(String[] args) {
		Student student = new Student();
		student.menu();
	}
}
